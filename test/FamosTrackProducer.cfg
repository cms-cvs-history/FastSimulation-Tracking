process PROD  = 
{


                 
	service =  RandomNumberGeneratorService {
		untracked uint32 sourceSeed = 123456789
# This is to initialize the random engine of Famos
# Watch out! This works only if the FamosProducer label is "Famos"
                PSet moduleSeeds =
                  {
#                    untracked uint32 VtxSmeared = 123456789
                     untracked uint32 famosSimHits = 13579
                     untracked uint32 siTrackerGaussianSmearingRecHits = 24680
                  }
	}
	

   

 
source = FlatRandomPtGunSource 
   {	 
      untracked uint32 firstRun  = 1
      untracked int32  maxEvents = 1000
 #     untracked int32  maxEvents = 20
      untracked      PSet  PGunParameters =
      {
	 # you can request more than 1 particle
	 #untracked vint32  PartID = { 211, 11, -13 }
	  untracked vint32 PartID = {13} 
	  untracked double MinEta = -2.4
	  untracked double MaxEta = 2.4
	  untracked double MinPhi = -3.14159265358979323846  # it must be in radians
	  untracked double MaxPhi =  3.14159265358979323846
	  untracked double MinPt   = 50.
	  untracked double MaxPt   = 60.
      }      
      untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
   }	


  # Primary vertex smearing.
  #  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"


   # The particle data table
   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   #Geometry
#   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"

   #Tracker geometry
#   es_module = TrackerGeometricDetESModule {}
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
   include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

   #Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Calo geometry service model
   include "Geometry/CaloEventSetup/data/CaloGeometry.cff"
   include "Geometry/CaloEventSetup/data/CaloTopology.cfi"		

   # Famos SimHits 
   include "FastSimulation/EventProducer/data/FamosSimHits.cfi"
   replace famosSimHits.SimulateCalorimetry = false
   replace famosSimHits.SimulateTracking = true
   replace famosSimHits.SimulatePileUp = false

  # KFTrackCandidateMaker
    include "FastSimulation/Tracking/data/GSTrackCandidates.cff"

    # CTF track fit with material
    include "FastSimulation/Tracking/data/GSFinalFitWithMaterial.cff"


   module o1 = PoolOutputModule { untracked string fileName = "tracks_Gun_test.root"  
untracked vstring outputCommands =
        {
            "keep *"
        }
}

# Mixing module 
   module mix = MixingModule   {
	int32 bunchspace = 25
   }   

# Gaussian Smearing RecHit producer
    include "FastSimulation/TrackingRecHitProducer/data/SiTrackerGaussianSmearingRecHitConverter.cfi"
#    	replace siTrackerGaussianSmearingRecHit.RecHits={"trackerRecHits"}


	module testanalyzer = FastTrackAnalyzer{
            vstring  SimHitList    = {"TrackerHits"}
            double PXB_Res_AxisLim = 0.01
	    double PXF_Res_AxisLim = 0.01
            double PXB_RecPos_AxisLim = 1
	    double PXF_RecPos_AxisLim = 1
            double PXB_SimPos_AxisLim = 1
	    double PXF_SimPos_AxisLim = 1
            double PXB_Err_AxisLim = 0.0
            double PXF_Err_AxisLim = 0.0
	    double TIB_Res_AxisLim = 0.01
	    double TIB_Pos_AxisLim = 10
	    double TID_Res_AxisLim = 0.01
	    double TID_Pos_AxisLim = 10
	    double TOB_Res_AxisLim = 0.01
	    double TOB_Pos_AxisLim = 10
	    double TEC_Res_AxisLim = 0.01
	    double TEC_Pos_AxisLim = 10
            double TIB_Err_AxisLim = 0.01
            double TID_Err_AxisLim = 0.01
            double TOB_Err_AxisLim = 0.01
            double TEC_Err_AxisLim = 0.01
            int32  NumTracks_AxisLim = 10	
        }	

service = Timing { }
service = SimpleProfiling { }

#    path p1 = { famosSimHits }	
    path p1 = { famosSimHits, mix, siTrackerGaussianSmearingRecHits, gsTrackCandidates,gsWithMaterialTracks,testanalyzer}	
#    path p1 = { VtxSmeared, Famos, mix, siTrackerGaussianSmearingRecHits}	
    endpath outpath = { o1 }

# Keep the logging output to a nice level #
#include "FWCore/MessageService/data/MessageLogger.cfi"
#replace MessageLogger.destinations = {"detailedInfo.txt"}



 #service = MessageLogger {
 # untracked  vstring destinations = {   "detailedInfo.txt"
 #                            , "critical.txt"
 #                          }
 #  PSet detailedInfo.txt = { untracked string threshold = "DEBUG"    } 
 #  untracked    vstring debugModules = {  "*"  } 
 # }

}		
