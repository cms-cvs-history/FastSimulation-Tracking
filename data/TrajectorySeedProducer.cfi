module trajectorySeedProducer = TrajectorySeedProducer
{	

    InputTag HitProducer = siTrackerGaussianSmearingRecHits:TrackerGSMatchedRecHits
    
    # The smallest number of layer crossed to create a track candidate
    vuint32 minRecHits = {5}
    
    # The smallest pT (true, in GeV/c) to create a track candidate 
    vdouble pTMin = {0.9}
    
    # The smallest d0 and z0 (true, in cm) to create a track candidate
    vdouble maxD0 = {1.}
    vdouble maxZ0 = {30.}
    
    # The number of hits needed to make a seed
    vuint32 numberOfHits  = {2}

    # The possible subdetectors for the first, second and third  hit
    # No seed with more than three hits are foreseen, but the code can certainly be 
    # modified to include this possibility.
    # 1 = PXB, 2 = PXD, 3 = TIB, 4 = TID, 5 = TOB, 6 = TEC 
    vuint32 firstHitSubDetectorNumber = { 2 }
    vuint32 firstHitSubDetectors = {1,2}
    vuint32 secondHitSubDetectorNumber = { 2 }
    vuint32 secondHitSubDetectors = {1,2}
    vuint32 thirdHitSubDetectorNumber = {0}
    vuint32 thirdHitSubDetectors = {}
    
    vstring seedingAlgo      = {"GlobalPixel"}  
	
    # The seed cuts for compatibility with originating from the beam axis.
    bool   seedCleaning  = true
    vdouble originRadius = {0.2}
    vdouble originHalfLength = {22.65}
    vdouble originpTMin = {1.}

    # The primary vertex collection
    VInputTag primaryVertices = { none }
    vdouble zVertexConstraint = { -1.0 }

}
